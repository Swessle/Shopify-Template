{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Kent\\\\Web Development\\\\repo\\\\work\\\\Shopify-Template\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport App from \"next/app\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../theme\";\nimport GlobalStyle from \"../components/GlobalTheme\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\n\nrequire(\"dotenv\").config();\n\nvar httpLink = createHttpLink({\n  uri: process.env.SHOPIFY_URI\n});\nvar middlewareLink = setContext(function () {\n  return {\n    headers: {\n      \"X-Shopify-Storefront-Access-Token\": process.env.STOREFRONT_API\n    }\n  };\n});\nvar client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n/**\r\n * @param {object} initialState\r\n * @param {boolean} options.isServer indicates whether it is a server side or client side\r\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\r\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\r\n * @param {boolean} options.debug User-defined debug mode param\r\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\r\n */\n\n\nvar makeStore = function makeStore(initialState, options) {\n  return createStore(reducer, initialState);\n};\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return __jsx(ApolloProvider, {\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(ThemeProvider, _extends({\n        theme: theme\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), __jsx(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(GlobalStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n\n              if (!Component.getInitialProps) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 4:\n              _context.t0 = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 7:\n              _context.t0 = {};\n\n            case 8:\n              pageProps = _context.t0;\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["D:/Kent/Web Development/repo/work/Shopify-Template/pages/_app.js"],"names":["React","Fragment","App","ThemeProvider","theme","GlobalStyle","ApolloClient","createHttpLink","setContext","InMemoryCache","ApolloProvider","require","config","httpLink","uri","process","env","SHOPIFY_URI","middlewareLink","headers","STOREFRONT_API","client","link","concat","cache","reducer","state","action","type","makeStore","initialState","options","createStore","MyApp","props","Component","pageProps","store","ctx","getInitialProps","withRedux"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,QAAQ,GAAGN,cAAc,CAAC;AAC/BO,EAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADc,CAAD,CAA/B;AAIA,IAAMC,cAAc,GAAGV,UAAU,CAAC;AAAA,SAAO;AACxCW,IAAAA,OAAO,EAAE;AACR,2CAAqCJ,OAAO,CAACC,GAAR,CAAYI;AADzC;AAD+B,GAAP;AAAA,CAAD,CAAjC;AAMA,IAAMC,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC/BgB,EAAAA,IAAI,EAAEJ,cAAc,CAACK,MAAf,CAAsBV,QAAtB,CADyB;AAE/BW,EAAAA,KAAK,EAAE,IAAIf,aAAJ;AAFwB,CAAjB,CAAf;;AAKA,IAAMgB,OAAO,GAAG,SAAVA,OAAU,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACvC,UAAQA,MAAM,CAACC,IAAf;AACC;AACC,aAAOF,KAAP;AAFF;AAIA,CALD;AAOA;;;;;;;;;;AAQA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC5C,SAAOC,WAAW,CAACP,OAAD,EAAUK,YAAV,CAAlB;AACA,CAFD;;IAIMG,K;;;;;;;;;;;;;6BAQI;AAAA,wBACgC,KAAKC,KADrC;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBC,KADtB,eACsBA,KADtB;AAGR,aACC,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEhB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEgB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,aAAD,WAAmB;AAAEjC,QAAAA,KAAK,EAALA;AAAF,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,MAAC,SAAD,eAAegC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,CADD,CADD,CADD,CADD;AAYA;;;;;;;;;AAtB8BD,cAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;;mBACvBH,SAAS,CAACI,e;;;;;;+CACnBJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;;;;;;4BACN,E;;;AAFGF,cAAAA,S;+CAIC;AAAEA,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EANWlC,G;;AA0BpB,eAAesC,SAAS,CAACX,SAAD,CAAT,CAAqBI,KAArB,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport App from \"next/app\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"../theme\";\r\nimport GlobalStyle from \"../components/GlobalTheme\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport { setContext } from \"apollo-link-context\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst httpLink = createHttpLink({\r\n\turi: process.env.SHOPIFY_URI\r\n});\r\n\r\nconst middlewareLink = setContext(() => ({\r\n\theaders: {\r\n\t\t\"X-Shopify-Storefront-Access-Token\": process.env.STOREFRONT_API\r\n\t}\r\n}));\r\n\r\nconst client = new ApolloClient({\r\n\tlink: middlewareLink.concat(httpLink),\r\n\tcache: new InMemoryCache()\r\n});\r\n\r\nconst reducer = (state = {}, action) => {\r\n\tswitch (action.type) {\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n/**\r\n * @param {object} initialState\r\n * @param {boolean} options.isServer indicates whether it is a server side or client side\r\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\r\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\r\n * @param {boolean} options.debug User-defined debug mode param\r\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\r\n */\r\nconst makeStore = (initialState, options) => {\r\n\treturn createStore(reducer, initialState);\r\n};\r\n\r\nclass MyApp extends App {\r\n\tstatic async getInitialProps({ Component, ctx }) {\r\n\t\tconst pageProps = Component.getInitialProps\r\n\t\t\t? await Component.getInitialProps(ctx)\r\n\t\t\t: {};\r\n\r\n\t\treturn { pageProps };\r\n\t}\r\n\trender() {\r\n\t\tconst { Component, pageProps, store } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<ApolloProvider client={client}>\r\n\t\t\t\t<Provider store={store}>\r\n\t\t\t\t\t<ThemeProvider {...{ theme }}>\r\n\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t<GlobalStyle />\r\n\t\t\t\t\t\t\t<Component {...pageProps} />\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t</ThemeProvider>\r\n\t\t\t\t</Provider>\r\n\t\t\t</ApolloProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRedux(makeStore)(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}