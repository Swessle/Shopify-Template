{"ast":null,"code":"import gql from \"graphql-tag\";\nconst CheckoutFragment = gql`\n\tfragment CheckoutFragment on Checkout {\n\t\tid\n\t\twebUrl\n\t\ttotalTax\n\t\tsubtotalPrice\n\t\ttotalPrice\n\t\tlineItems(first: 250) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tvariant {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\timage {\n\t\t\t\t\t\t\tsrc\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprice\n\t\t\t\t\t}\n\t\t\t\t\tquantity\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const createCheckout = gql`\n\tmutation checkoutCreate($input: CheckoutCreateInput!) {\n\t\tcheckoutCreate(input: $input) {\n\t\t\tuserErrors {\n\t\t\t\tmessage\n\t\t\t\tfield\n\t\t\t}\n\t\t\tcheckout {\n\t\t\t\t...CheckoutFragment\n\t\t\t}\n\t\t}\n\t}\n\t${CheckoutFragment}\n`;\nexport const checkoutLineItemsAdd = gql`\n\tmutation checkoutLineItemsAdd(\n\t\t$checkoutId: ID!\n\t\t$lineItems: [CheckoutLineItemInput!]!\n\t) {\n\t\tcheckoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n\t\t\tuserErrors {\n\t\t\t\tmessage\n\t\t\t\tfield\n\t\t\t}\n\t\t\tcheckout {\n\t\t\t\t...CheckoutFragment\n\t\t\t}\n\t\t}\n\t}\n\t${CheckoutFragment}\n`;\nexport const checkoutLineItemsUpdate = gql`\n\tmutation checkoutLineItemsUpdate(\n\t\t$checkoutId: ID!\n\t\t$lineItems: [CheckoutLineItemUpdateInput!]!\n\t) {\n\t\tcheckoutLineItemsUpdate(\n\t\t\tcheckoutId: $checkoutId\n\t\t\tlineItems: $lineItems\n\t\t) {\n\t\t\tuserErrors {\n\t\t\t\tmessage\n\t\t\t\tfield\n\t\t\t}\n\t\t\tcheckout {\n\t\t\t\t...CheckoutFragment\n\t\t\t}\n\t\t}\n\t}\n\t${CheckoutFragment}\n`;\nexport const checkoutLineItemsRemove = gql`\n\tmutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: [ID!]!) {\n\t\tcheckoutLineItemsRemove(\n\t\t\tcheckoutId: $checkoutId\n\t\t\tlineItemIds: $lineItemIds\n\t\t) {\n\t\t\tuserErrors {\n\t\t\t\tmessage\n\t\t\t\tfield\n\t\t\t}\n\t\t\tcheckout {\n\t\t\t\t...CheckoutFragment\n\t\t\t}\n\t\t}\n\t}\n\t${CheckoutFragment}\n`;\nexport const checkoutCustomerAssociate = gql`\n\tmutation checkoutCustomerAssociate(\n\t\t$checkoutId: ID!\n\t\t$customerAccessToken: String!\n\t) {\n\t\tcheckoutCustomerAssociate(\n\t\t\tcheckoutId: $checkoutId\n\t\t\tcustomerAccessToken: $customerAccessToken\n\t\t) {\n\t\t\tuserErrors {\n\t\t\t\tfield\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tcheckout {\n\t\t\t\t...CheckoutFragment\n\t\t\t}\n\t\t}\n\t}\n\t${CheckoutFragment}\n`;\nexport function addVariantToCart(variantId, quantity) {\n  this.props.checkoutLineItemsAdd({\n    variables: {\n      checkoutId: this.state.checkout.id,\n      lineItems: [{\n        variantId,\n        quantity: parseInt(quantity, 10)\n      }]\n    }\n  }).then(res => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsAdd.checkout\n    });\n  });\n  this.handleCartOpen();\n}\nexport function updateLineItemInCart(lineItemId, quantity) {\n  this.props.checkoutLineItemsUpdate({\n    variables: {\n      checkoutId: this.state.checkout.id,\n      lineItems: [{\n        id: lineItemId,\n        quantity: parseInt(quantity, 10)\n      }]\n    }\n  }).then(res => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsUpdate.checkout\n    });\n  });\n}\nexport function removeLineItemInCart(lineItemId) {\n  this.props.checkoutLineItemsRemove({\n    variables: {\n      checkoutId: this.state.checkout.id,\n      lineItemIds: [lineItemId]\n    }\n  }).then(res => {\n    this.setState({\n      checkout: res.data.checkoutLineItemsRemove.checkout\n    });\n  });\n}\nexport function associateCustomerCheckout(customerAccessToken) {\n  this.props.checkoutCustomerAssociate({\n    variables: {\n      checkoutId: this.state.checkout.id,\n      customerAccessToken: customerAccessToken\n    }\n  }).then(res => {\n    this.setState({\n      checkout: res.data.checkoutCustomerAssociate.checkout,\n      isCustomerAuthOpen: false\n    });\n  });\n}","map":{"version":3,"sources":["D:/Kent/Web Development/repo/work/Shopify-Template/lib/checkout.js"],"names":["gql","CheckoutFragment","createCheckout","checkoutLineItemsAdd","checkoutLineItemsUpdate","checkoutLineItemsRemove","checkoutCustomerAssociate","addVariantToCart","variantId","quantity","props","variables","checkoutId","state","checkout","id","lineItems","parseInt","then","res","setState","data","handleCartOpen","updateLineItemInCart","lineItemId","removeLineItemInCart","lineItemIds","associateCustomerCheckout","customerAccessToken","isCustomerAuthOpen"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nconst CheckoutFragment = gql`\r\n\tfragment CheckoutFragment on Checkout {\r\n\t\tid\r\n\t\twebUrl\r\n\t\ttotalTax\r\n\t\tsubtotalPrice\r\n\t\ttotalPrice\r\n\t\tlineItems(first: 250) {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\tid\r\n\t\t\t\t\ttitle\r\n\t\t\t\t\tvariant {\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\timage {\r\n\t\t\t\t\t\t\tsrc\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tprice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tquantity\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const createCheckout = gql`\r\n\tmutation checkoutCreate($input: CheckoutCreateInput!) {\r\n\t\tcheckoutCreate(input: $input) {\r\n\t\t\tuserErrors {\r\n\t\t\t\tmessage\r\n\t\t\t\tfield\r\n\t\t\t}\r\n\t\t\tcheckout {\r\n\t\t\t\t...CheckoutFragment\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${CheckoutFragment}\r\n`;\r\n\r\nexport const checkoutLineItemsAdd = gql`\r\n\tmutation checkoutLineItemsAdd(\r\n\t\t$checkoutId: ID!\r\n\t\t$lineItems: [CheckoutLineItemInput!]!\r\n\t) {\r\n\t\tcheckoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\r\n\t\t\tuserErrors {\r\n\t\t\t\tmessage\r\n\t\t\t\tfield\r\n\t\t\t}\r\n\t\t\tcheckout {\r\n\t\t\t\t...CheckoutFragment\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${CheckoutFragment}\r\n`;\r\n\r\nexport const checkoutLineItemsUpdate = gql`\r\n\tmutation checkoutLineItemsUpdate(\r\n\t\t$checkoutId: ID!\r\n\t\t$lineItems: [CheckoutLineItemUpdateInput!]!\r\n\t) {\r\n\t\tcheckoutLineItemsUpdate(\r\n\t\t\tcheckoutId: $checkoutId\r\n\t\t\tlineItems: $lineItems\r\n\t\t) {\r\n\t\t\tuserErrors {\r\n\t\t\t\tmessage\r\n\t\t\t\tfield\r\n\t\t\t}\r\n\t\t\tcheckout {\r\n\t\t\t\t...CheckoutFragment\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${CheckoutFragment}\r\n`;\r\n\r\nexport const checkoutLineItemsRemove = gql`\r\n\tmutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: [ID!]!) {\r\n\t\tcheckoutLineItemsRemove(\r\n\t\t\tcheckoutId: $checkoutId\r\n\t\t\tlineItemIds: $lineItemIds\r\n\t\t) {\r\n\t\t\tuserErrors {\r\n\t\t\t\tmessage\r\n\t\t\t\tfield\r\n\t\t\t}\r\n\t\t\tcheckout {\r\n\t\t\t\t...CheckoutFragment\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${CheckoutFragment}\r\n`;\r\n\r\nexport const checkoutCustomerAssociate = gql`\r\n\tmutation checkoutCustomerAssociate(\r\n\t\t$checkoutId: ID!\r\n\t\t$customerAccessToken: String!\r\n\t) {\r\n\t\tcheckoutCustomerAssociate(\r\n\t\t\tcheckoutId: $checkoutId\r\n\t\t\tcustomerAccessToken: $customerAccessToken\r\n\t\t) {\r\n\t\t\tuserErrors {\r\n\t\t\t\tfield\r\n\t\t\t\tmessage\r\n\t\t\t}\r\n\t\t\tcheckout {\r\n\t\t\t\t...CheckoutFragment\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t${CheckoutFragment}\r\n`;\r\n\r\nexport function addVariantToCart(variantId, quantity) {\r\n\tthis.props\r\n\t\t.checkoutLineItemsAdd({\r\n\t\t\tvariables: {\r\n\t\t\t\tcheckoutId: this.state.checkout.id,\r\n\t\t\t\tlineItems: [{ variantId, quantity: parseInt(quantity, 10) }]\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcheckout: res.data.checkoutLineItemsAdd.checkout\r\n\t\t\t});\r\n\t\t});\r\n\r\n\tthis.handleCartOpen();\r\n}\r\n\r\nexport function updateLineItemInCart(lineItemId, quantity) {\r\n\tthis.props\r\n\t\t.checkoutLineItemsUpdate({\r\n\t\t\tvariables: {\r\n\t\t\t\tcheckoutId: this.state.checkout.id,\r\n\t\t\t\tlineItems: [\r\n\t\t\t\t\t{ id: lineItemId, quantity: parseInt(quantity, 10) }\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcheckout: res.data.checkoutLineItemsUpdate.checkout\r\n\t\t\t});\r\n\t\t});\r\n}\r\n\r\nexport function removeLineItemInCart(lineItemId) {\r\n\tthis.props\r\n\t\t.checkoutLineItemsRemove({\r\n\t\t\tvariables: {\r\n\t\t\t\tcheckoutId: this.state.checkout.id,\r\n\t\t\t\tlineItemIds: [lineItemId]\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcheckout: res.data.checkoutLineItemsRemove.checkout\r\n\t\t\t});\r\n\t\t});\r\n}\r\n\r\nexport function associateCustomerCheckout(customerAccessToken) {\r\n\tthis.props\r\n\t\t.checkoutCustomerAssociate({\r\n\t\t\tvariables: {\r\n\t\t\t\tcheckoutId: this.state.checkout.id,\r\n\t\t\t\tcustomerAccessToken: customerAccessToken\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcheckout: res.data.checkoutCustomerAssociate.checkout,\r\n\t\t\t\tisCustomerAuthOpen: false\r\n\t\t\t});\r\n\t\t});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}